
version: "3.9"
services:
  gateway:
    build: ./gateway
    ports:
      - "8080:8000"
    environment:
      SERVICE_A_URL: "http://service_a:8000"
      SERVICE_B_URL: "http://service_b:8000"
      SERVICE_C_URL: "http://service_c:8000"
      FALLBACK_URL: "http://fallback:8000"
    depends_on:
      service_a:
        condition: service_healthy
      service_b:
        condition: service_healthy
      fallback:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import urllib.request; urllib.request.urlopen(\"http://localhost:8000/health\"); print(1)'"]
      interval: 10s
      timeout: 3s
      retries: 5

  service_a:
    build: ./service_a
    environment:
      REDIS_URL: "redis://redis:6379/0"
    depends_on:
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import urllib.request; urllib.request.urlopen(\"http://localhost:8000/health\"); print(1)'"]
      interval: 10s
      timeout: 3s
      retries: 5

  service_b:
    build: ./service_b
    environment:
      FAIL_RATE: "0.2"  # 20% simulated failures
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import urllib.request; urllib.request.urlopen(\"http://localhost:8000/health\"); print(1)'"]
      interval: 10s
      timeout: 3s
      retries: 5

  service_c:
    build: ./service_c
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import urllib.request; urllib.request.urlopen(\"http://localhost:8000/health\"); print(1)'"]
      interval: 10s
      timeout: 3s
      retries: 5

  fallback:
    build: ./fallback
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import urllib.request; urllib.request.urlopen(\"http://localhost:8000/health\"); print(1)'"]
      interval: 10s
      timeout: 3s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", ""]  # disable disk persistence for demo
